{"remainingRequest":"C:\\Users\\User\\source\\repos\\TestVUEandWCF\\vue-vlient-for-wcf\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\User\\source\\repos\\TestVUEandWCF\\vue-vlient-for-wcf\\src\\components\\AllTable.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\User\\source\\repos\\TestVUEandWCF\\vue-vlient-for-wcf\\src\\components\\AllTable.vue","mtime":1618765025658},{"path":"C:\\Users\\User\\source\\repos\\TestVUEandWCF\\vue-vlient-for-wcf\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\User\\source\\repos\\TestVUEandWCF\\vue-vlient-for-wcf\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\User\\source\\repos\\TestVUEandWCF\\vue-vlient-for-wcf\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\User\\source\\repos\\TestVUEandWCF\\vue-vlient-for-wcf\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQppbXBvcnQge21hcEdldHRlcnMsIG1hcEFjdGlvbnN9IGZyb20gJ3Z1ZXgnOw0KDQpleHBvcnQgZGVmYXVsdCB7DQogICAgbmFtZTogIkFsbFRhYmxlIiwNCg0KICAgIGRhdGE6IGZ1bmN0aW9uKCkgew0KICAgICAgICByZXR1cm4gew0KICAgICAgICAgIG5ld05hbWU6IHRoaXMubmV3TmFtZSwNCiAgICAgICAgICBuZXdEZXNjcjogdGhpcy5uZXdEZXNjciwNCiAgICAgICAgICB1cGRhdGVOYW1lOiB0aGlzLnVwZGF0ZU5hbWUsDQogICAgICAgICAgdXBkYXRlRGVzY3I6IHRoaXMudXBkYXRlRGVzY3INCiAgICAgICAgICANCiAgICAgICAgIH0NCiAgICB9LA0KICAgICBtZXRob2RzOiB7DQogICAgICAgIC4uLm1hcEFjdGlvbnMoWydmZXRjaFRhYmxlJywgJ2FkZFJvdycsICdkZWxldGVSb3cnLCAnZG9VcGRhdGUnLCAndXBkYXRlUm93JywgJ0dldE5hbWUnXSkNCiAgICB9LA0KICAgIGNvbXB1dGVkOiBtYXBHZXR0ZXJzKFsnR2V0TXlUYWJsZScsICdHZXRVcGRhdGVTdGF0dXMnXSksDQogICAgY3JlYXRlZCgpIHsNCiAgICAgICAgY29uc29sZS5sb2coIkFsbFRhYmxlLUNyZWF0ZWQuLi4iKTsNCiAgICAgICAgdGhpcy5mZXRjaFRhYmxlKCk7DQogICAgfQ0KIA0KfQ0KDQo="},{"version":3,"sources":["AllTable.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4DA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","file":"AllTable.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n    <div>\r\n      <h3>Table from WCF backend</h3>\r\n      \r\n      <div class=\"mytable\">\r\n        <!--\r\n          <div v-for=\"myrow in GetMyTable\" v-bind:key=\"myrow.id\" class=\"myrow\">\r\n              {{ myrow.Name }}\r\n          </div>\r\n        -->\r\n        <table border=\"1\" align=\"center\">\r\n            <tr><th>ID</th> <th>Name</th> <th>Description</th> <th>Edit</th> <th>Delete</th></tr>\r\n            <tr v-for=\"myrow in GetMyTable\" v-bind:key=\"myrow.id\" class=\"myrow\">\r\n                <td>{{myrow.id}}</td>\r\n                <td>{{myrow.Name}}</td>\r\n                <td>{{myrow.Description}}</td>\r\n                <td><button v-on:click=\"doUpdate(myrow.id)\"> Edit</button></td>\r\n                <td><button v-on:click=\"deleteRow(myrow.id)\"> Delete</button></td>\r\n            </tr>\r\n            <tr>\r\n                <td><button v-on:click=\"addRow({newName, newDescr})\">Add</button></td>\r\n              \r\n                <td><input v-model=\"newName\" placeholder=\"New Name\"></td>\r\n                <td><input v-model=\"newDescr\" placeholder=\"Description\"></td>\r\n                \r\n            </tr>\r\n        </table>\r\n\r\n        <div v-if=\"GetUpdateStatus > 0\">\r\n          <h3>Update row:</h3>\r\n            <table align=\"center\">\r\n                <tr>\r\n                    <th> </th><th>ID</th>  <th> Name </th>  <th> Description </th>\r\n                </tr>\r\n                <tr>\r\n                    <td>Old value: </td>\r\n                    <td>{{GetUpdateStatus}}</td>\r\n                    <td>{{GetMyTable.find(i=>i.id===GetUpdateStatus).Name}}</td>\r\n                    <td>{{GetMyTable.find(i=>i.id===GetUpdateStatus).Description}}</td>\r\n                    \r\n                </tr>\r\n                <tr>\r\n                    <td>New value: </td>\r\n                    <td>{{GetUpdateStatus}}</td>\r\n                    <td><input type=\"text\" v-model=\"updateName\"></td>\r\n                    <td><input type=\"text\" v-model=\"updateDescr\"></td>\r\n                    \r\n                </tr>\r\n\r\n            </table>\r\n            <button @click=\"doUpdate(0)\"> Cancel Update</button>\r\n            <button @click=\"updateRow({updateName, updateDescr})\"> Update </button>\r\n        </div>\r\n\r\n      </div>\r\n      \r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport {mapGetters, mapActions} from 'vuex';\r\n\r\nexport default {\r\n    name: \"AllTable\",\r\n\r\n    data: function() {\r\n        return {\r\n          newName: this.newName,\r\n          newDescr: this.newDescr,\r\n          updateName: this.updateName,\r\n          updateDescr: this.updateDescr\r\n          \r\n         }\r\n    },\r\n     methods: {\r\n        ...mapActions(['fetchTable', 'addRow', 'deleteRow', 'doUpdate', 'updateRow', 'GetName'])\r\n    },\r\n    computed: mapGetters(['GetMyTable', 'GetUpdateStatus']),\r\n    created() {\r\n        console.log(\"AllTable-Created...\");\r\n        this.fetchTable();\r\n    }\r\n \r\n}\r\n\r\n</script>\r\n\r\n<style>\r\n\r\n</style>"]}]}