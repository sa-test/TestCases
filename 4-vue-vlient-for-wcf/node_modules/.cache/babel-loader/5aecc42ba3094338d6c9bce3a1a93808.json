{"remainingRequest":"C:\\Users\\User\\source\\repos\\TestVUEandWCF\\vue-vlient-for-wcf\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\User\\source\\repos\\TestVUEandWCF\\vue-vlient-for-wcf\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\User\\source\\repos\\TestVUEandWCF\\vue-vlient-for-wcf\\src\\store\\modules\\mystore.js","dependencies":[{"path":"C:\\Users\\User\\source\\repos\\TestVUEandWCF\\vue-vlient-for-wcf\\src\\store\\modules\\mystore.js","mtime":1618763003770},{"path":"C:\\Users\\User\\source\\repos\\TestVUEandWCF\\vue-vlient-for-wcf\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\User\\source\\repos\\TestVUEandWCF\\vue-vlient-for-wcf\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\User\\source\\repos\\TestVUEandWCF\\vue-vlient-for-wcf\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["C:/Users/User/source/repos/TestVUEandWCF/vue-vlient-for-wcf/src/store/modules/mystore.js"],"names":["axios","state","mystore","update","getters","GetMyTable","console","log","GetUpdateStatus","GetName","find","i","id","Name","actions","fetchTable","commit","get","response","data","listOfObjects","Object","keys","map","key","addRow","newName","newDescr","post","response1","deleteRow","doUpdate","status","updateRow","params","updateName","updateDescr","mutations","setTable","table","setUpdate"],"mappings":"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","sourcesContent":["import axios from 'axios'\r\n\r\nconst state = {\r\n    mystore: [],\r\n    update: 0\r\n};\r\n\r\nconst getters = {\r\n    //GetMyTable: (state) => state.mytable\r\n    GetMyTable: function(state) {\r\n        console.log(\"Step into GetMyTable...\")\r\n        return state.mystore\r\n    },\r\n    GetUpdateStatus: function(state) {\r\n        return state.update\r\n    },\r\n    GetName: function(state) {\r\n        return state.mystore.find(i=>i.id===state.update).Name\r\n    }\r\n};\r\n\r\nconst actions = {\r\n    async fetchTable ({commit}) {\r\n        console.log(\"Step into fetchTable...\")\r\n        const response = await axios.get('http://localhost:5657/TestDBService.svc/web/GetData')\r\n        console.log(response)\r\n        console.log(response.data)\r\n        let listOfObjects = Object.keys(response.data).map((key) => {\r\n            return response.data[key]\r\n          })\r\n        console.log(listOfObjects)\r\n        console.log(listOfObjects[0])\r\n        //const response2 = await axios.get('https://jsonplaceholder.typicode.com/todos')\r\n        //console.log(response2)\r\n        //console.log(response2.data)\r\n\r\n        commit('setTable', listOfObjects[0])\r\n    },\r\n    async addRow({commit}, data) {\r\n        console.log(\"Step into addRow action...\")\r\n        console.log(data.newName, data.newDescr);\r\n        const response1 = await axios.post(`http://localhost:5657/TestDBService.svc/web//AddUser/${data.newName}/${data.newDescr}`)\r\n        console.log(response1.data)\r\n        const response = await axios.get('http://localhost:5657/TestDBService.svc/web/GetData')\r\n        let listOfObjects = Object.keys(response.data).map((key) => {\r\n            return response.data[key]\r\n          })\r\n        console.log(listOfObjects)\r\n        console.log(listOfObjects[0])\r\n        commit('setTable', listOfObjects[0])        \r\n        \r\n    },\r\n    async deleteRow({commit}, id) {\r\n        await axios.get(`http://localhost:5657/TestDBService.svc/web/DelUser/${id}`);\r\n        const response = await axios.get('http://localhost:5657/TestDBService.svc/web/GetData')\r\n        let listOfObjects = Object.keys(response.data).map((key) => {\r\n            return response.data[key]\r\n          })\r\n        console.log(listOfObjects)\r\n        console.log(listOfObjects[0])\r\n        commit('setTable', listOfObjects[0])  \r\n\r\n    },\r\n    doUpdate({commit}, status) {\r\n        console.log(\"Step into doUpdate\")\r\n        console.log(status)\r\n        commit('setUpdate', status)\r\n    },\r\n    async updateRow({commit}, params) {\r\n        console.log(params)\r\n        let id = update;\r\n        console.log(id)\r\n        const response1 = await axios.get(`http://localhost:5657/TestDBService.svc/web/UpdateUserWeb/${id}/${params.updateName}/${params.updateDescr}`);\r\n        console.log(response1.data)\r\n        const response = await axios.get('http://localhost:5657/TestDBService.svc/web/GetData')\r\n        let listOfObjects = Object.keys(response.data).map((key) => {\r\n            return response.data[key]\r\n          })\r\n\r\n        commit('setTable', listOfObjects[0])\r\n    }\r\n\r\n};\r\n\r\nconst mutations = {\r\n    setTable: (state, table) => (state.mystore = table),\r\n    //newTodo: (state, todo) => (state.todos.unshift(todo)),\r\n    //removeRow: (state, id) => state.table = state.table.filter(row => row.id != id),\r\n    setUpdate: function(state, status) {\r\n        state.update = status\r\n        console.log(state.update)\r\n    }\r\n};\r\n\r\nexport default {\r\n    state,\r\n    getters,\r\n    actions,\r\n    mutations\r\n}"]}]}