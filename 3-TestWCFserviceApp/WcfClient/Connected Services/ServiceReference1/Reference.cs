//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WcfClient.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/TestWCFserviceApp")]
    [System.SerializableAttribute()]
    public partial class User : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.ITestDBService")]
    public interface ITestDBService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITestDBService/AddUser", ReplyAction="http://tempuri.org/ITestDBService/AddUserResponse")]
        int AddUser(string name, string descr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITestDBService/AddUser", ReplyAction="http://tempuri.org/ITestDBService/AddUserResponse")]
        System.Threading.Tasks.Task<int> AddUserAsync(string name, string descr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITestDBService/DeleteUser", ReplyAction="http://tempuri.org/ITestDBService/DeleteUserResponse")]
        int DeleteUser(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITestDBService/DeleteUser", ReplyAction="http://tempuri.org/ITestDBService/DeleteUserResponse")]
        System.Threading.Tasks.Task<int> DeleteUserAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITestDBService/UpdateUser", ReplyAction="http://tempuri.org/ITestDBService/UpdateUserResponse")]
        int UpdateUser(int id, string name, string descr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITestDBService/UpdateUser", ReplyAction="http://tempuri.org/ITestDBService/UpdateUserResponse")]
        System.Threading.Tasks.Task<int> UpdateUserAsync(int id, string name, string descr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITestDBService/GetData", ReplyAction="http://tempuri.org/ITestDBService/GetDataResponse")]
        WcfClient.ServiceReference1.User[] GetData();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITestDBService/GetData", ReplyAction="http://tempuri.org/ITestDBService/GetDataResponse")]
        System.Threading.Tasks.Task<WcfClient.ServiceReference1.User[]> GetDataAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ITestDBServiceChannel : WcfClient.ServiceReference1.ITestDBService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TestDBServiceClient : System.ServiceModel.ClientBase<WcfClient.ServiceReference1.ITestDBService>, WcfClient.ServiceReference1.ITestDBService {
        
        public TestDBServiceClient() {
        }
        
        public TestDBServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public TestDBServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TestDBServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TestDBServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int AddUser(string name, string descr) {
            return base.Channel.AddUser(name, descr);
        }
        
        public System.Threading.Tasks.Task<int> AddUserAsync(string name, string descr) {
            return base.Channel.AddUserAsync(name, descr);
        }
        
        public int DeleteUser(int id) {
            return base.Channel.DeleteUser(id);
        }
        
        public System.Threading.Tasks.Task<int> DeleteUserAsync(int id) {
            return base.Channel.DeleteUserAsync(id);
        }
        
        public int UpdateUser(int id, string name, string descr) {
            return base.Channel.UpdateUser(id, name, descr);
        }
        
        public System.Threading.Tasks.Task<int> UpdateUserAsync(int id, string name, string descr) {
            return base.Channel.UpdateUserAsync(id, name, descr);
        }
        
        public WcfClient.ServiceReference1.User[] GetData() {
            return base.Channel.GetData();
        }
        
        public System.Threading.Tasks.Task<WcfClient.ServiceReference1.User[]> GetDataAsync() {
            return base.Channel.GetDataAsync();
        }
    }
}
